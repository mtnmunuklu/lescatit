swagger: "2.0"
info:
  description: "Lescatit allows to categorize web pages."
  version: "1.0.0"
  title: "Lescatit API"
  contact:
    email: "metinmunuklu@gmail.com"
  license:
    name: "MIT"
    url: "https://github.com/mtnmunuklu/Lescatit/blob/main/LICENSE"
host: "lescatit.com"
schemes:
- "https"
paths:
  /signup:
    put:
      summary: "Performs the user registration process."
      description: ""
      operationId: "signup"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "SignUp object"
        required: true
        schema:
          $ref: "#/definitions/SignUp"
      responses:
        "201":
            description: "Created"
            schema:
              $ref: "#/definitions/User"
        "400":
            description: "Bad request"
            schema:
              $ref: "#/definitions/Error"
        "422":
            description: "Unprocessable entity"
            schema:
              $ref: "#/definitions/Error"
  /signin:
    post:
      summary: "Performs the user login process."
      description: ""
      operationId: "signin"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "SignIn object"
        required: true
        schema:
          $ref: "#/definitions/SignIn"
      responses:
        "200":
            description: "Ok"
            schema:
              $ref: "#/definitions/SignInResponse"
        "400":
            description: "Bad request"
            schema:
              $ref: "#/definitions/Error"
        "422":
            description: "Unprocessable entity"
            schema:
              $ref: "#/definitions/Error"
      security:
      - api_key: []
  /users/{id}:
    get:
      summary: "Performs return the user by id."
      description: ""
      operationId: "getUser"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the user"
        required: true
        type: "string"
      responses:
        "200":
            description: "Ok"
            schema:
              $ref: "#/definitions/User"
        "400":
            description: "Bad request"
            schema:
              $ref: "#/definitions/Error"
        "422":
            description: "Unprocessable entity"
            schema:
              $ref: "#/definitions/Error"
      security:
      - api_key: []
    post:
      summary: "Performs update the user."
      description: ""
      operationId: "updateUser"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the user"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "User update object"
        required: true
        schema:
          $ref: "#/definitions/UpdateUser"
      responses:
        "200":
            description: "Ok"
            schema:
              $ref: "#/definitions/User"
        "400":
            description: "Bad request"
            schema:
              $ref: "#/definitions/Error"
        "422":
            description: "Unprocessable entity"
            schema:
              $ref: "#/definitions/Error"
      security:
      - api_key: []
    delete:
      summary: "Performs delete the user."
      description: ""
      operationId: "deleteUser"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of the user"
        required: true
        type: "string"
      responses:
        "200":
            description: "Ok"
            schema:
              $ref: "#/definitions/DeleteUserResponse"
        "400":
            description: "Bad request"
            schema:
              $ref: "#/definitions/Error"
        "422":
            description: "Unprocessable entity"
            schema:
              $ref: "#/definitions/Error"
      security:
      - api_key: []
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      created:
        type: "integer"
        format: "int64"
      updated:
        type: "integer"
        format: "int64"
    xml:
      name: "User"
  SignUp:
    type: "object"
    properties:
      name:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
    xml:
      name: "SignUp"
  SignIn:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
    xml:
      name: "SignIn"
  SignInResponse:
    type: "object"
    properties:
      user:
        $ref: "#/definitions/User"
      token:
        type: "string"
    xml:
      name: "SignInResponse"
  UpdateUser:
    type: "object"
    properties:
      name:
        type: "string"
    xml:
      name: "UpdateUser"
  DeleteUserResponse:
    type: "object"
    properties:
      id:
        type: "string"
    xml:
      name: "DeleteUserResponse"
  Error:
    type: "object"
    properties:
      error:
        type: "string"